{"ast":null,"code":"import axios from \"axios\";\nimport Swal from \"sweetalert2\";\nconst URL = \"http://localhost:3000/api/users\";\nconst loginUser = async (user, loginHandlerCb) => {\n  if (user.email === \"\") {\n    Swal.fire(\"Login\", \"Email can not be empty.\", \"error\");\n  } else if (user.password === \"\") {\n    Swal.fire(\"Login\", \"Password can not be empty.\", \"error\");\n  } else {\n    try {\n      console.log('up');\n      let result = await axios({\n        method: 'POST',\n        url: `${URL}/login`,\n        data: user\n      });\n      Swal.fire(\"Login\", result.data.message, \"success\");\n      const access_token = result.data.access_token;\n      localStorage.setItem('access_token', access_token);\n      console.log(result.data);\n      loginHandlerCb(true);\n    } catch (err) {\n      Swal.fire(\"Login\", \"Password or Email is incorrect!\", \"error\");\n      console.log(err);\n    }\n  }\n};\nconst getAllUser = async cb => {\n  try {\n    let result = await axios({\n      method: 'GET',\n      url: URL\n    });\n    cb(result.data);\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport { loginUser, getAllUser };","map":{"version":3,"names":["axios","Swal","URL","loginUser","user","loginHandlerCb","email","fire","password","console","log","result","method","url","data","message","access_token","localStorage","setItem","err","getAllUser","cb"],"sources":["D:/Pelatihan/Code id/mini-project/full-stack/kelompok/Warehouse-Code.id/interface/src/axios/userAxios.js"],"sourcesContent":["import axios from \"axios\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst URL = \"http://localhost:3000/api/users\"\r\n\r\nconst loginUser = async (user, loginHandlerCb) => {\r\n    if (user.email === \"\") {\r\n        Swal.fire(\"Login\", \"Email can not be empty.\", \"error\");\r\n    } else if (user.password === \"\") {\r\n        Swal.fire(\"Login\", \"Password can not be empty.\", \"error\");\r\n    } else {\r\n        try{\r\n            console.log('up')\r\n            let result = await axios({\r\n                method:'POST',\r\n                url:`${URL}/login`,\r\n                data:user\r\n            })\r\n\r\n            Swal.fire(\"Login\", result.data.message, \"success\");\r\n            const access_token = result.data.access_token\r\n            localStorage.setItem('access_token', access_token)\r\n            console.log(result.data)\r\n            loginHandlerCb(true)\r\n            \r\n            \r\n        }\r\n        catch(err){\r\n            Swal.fire(\"Login\", \"Password or Email is incorrect!\", \"error\")\r\n            console.log(err)\r\n        }\r\n    }\r\n    \r\n}\r\n\r\nconst getAllUser = async (cb) => {\r\n    try{\r\n        let result = await axios({\r\n            method:'GET',\r\n            url: URL\r\n        })\r\n        cb(result.data)\r\n    }\r\n    catch(err){\r\n        console.log(err)\r\n    }\r\n}\r\n\r\nexport {\r\n    loginUser, getAllUser\r\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,aAAa;AAE9B,MAAMC,GAAG,GAAG,iCAAiC;AAE7C,MAAMC,SAAS,GAAG,MAAAA,CAAOC,IAAI,EAAEC,cAAc,KAAK;EAC9C,IAAID,IAAI,CAACE,KAAK,KAAK,EAAE,EAAE;IACnBL,IAAI,CAACM,IAAI,CAAC,OAAO,EAAE,yBAAyB,EAAE,OAAO,CAAC;EAC1D,CAAC,MAAM,IAAIH,IAAI,CAACI,QAAQ,KAAK,EAAE,EAAE;IAC7BP,IAAI,CAACM,IAAI,CAAC,OAAO,EAAE,4BAA4B,EAAE,OAAO,CAAC;EAC7D,CAAC,MAAM;IACH,IAAG;MACCE,OAAO,CAACC,GAAG,CAAC,IAAI,CAAC;MACjB,IAAIC,MAAM,GAAG,MAAMX,KAAK,CAAC;QACrBY,MAAM,EAAC,MAAM;QACbC,GAAG,EAAE,GAAEX,GAAI,QAAO;QAClBY,IAAI,EAACV;MACT,CAAC,CAAC;MAEFH,IAAI,CAACM,IAAI,CAAC,OAAO,EAAEI,MAAM,CAACG,IAAI,CAACC,OAAO,EAAE,SAAS,CAAC;MAClD,MAAMC,YAAY,GAAGL,MAAM,CAACG,IAAI,CAACE,YAAY;MAC7CC,YAAY,CAACC,OAAO,CAAC,cAAc,EAAEF,YAAY,CAAC;MAClDP,OAAO,CAACC,GAAG,CAACC,MAAM,CAACG,IAAI,CAAC;MACxBT,cAAc,CAAC,IAAI,CAAC;IAGxB,CAAC,CACD,OAAMc,GAAG,EAAC;MACNlB,IAAI,CAACM,IAAI,CAAC,OAAO,EAAE,iCAAiC,EAAE,OAAO,CAAC;MAC9DE,OAAO,CAACC,GAAG,CAACS,GAAG,CAAC;IACpB;EACJ;AAEJ,CAAC;AAED,MAAMC,UAAU,GAAG,MAAOC,EAAE,IAAK;EAC7B,IAAG;IACC,IAAIV,MAAM,GAAG,MAAMX,KAAK,CAAC;MACrBY,MAAM,EAAC,KAAK;MACZC,GAAG,EAAEX;IACT,CAAC,CAAC;IACFmB,EAAE,CAACV,MAAM,CAACG,IAAI,CAAC;EACnB,CAAC,CACD,OAAMK,GAAG,EAAC;IACNV,OAAO,CAACC,GAAG,CAACS,GAAG,CAAC;EACpB;AACJ,CAAC;AAED,SACIhB,SAAS,EAAEiB,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}